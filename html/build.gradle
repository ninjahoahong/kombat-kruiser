apply plugin: "java"
apply plugin: 'org.akhikhl.gretty'
apply plugin: "war"
apply plugin: "gwt"

gwt {
    gwtVersion='2.8.0' // Should match the gwt version used for building the gwt backend
    maxHeapSize="1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize="1G"

    src = files(file("src/")) // Needs to be in front of "modules" below.
    modules 'com.ninjahoahong.kombatkruiser.GdxDefinition'
    devModules 'com.ninjahoahong.kombatkruiser.GdxDefinitionSuperdev'
    project.webAppDirName = 'webapp'

    compiler {
        strict = true
        disableCastChecking = true
    }
}

gretty {
    extraResourceBase 'webapp'
}

import de.richsource.gradle.plugins.gwt.GwtSuperDev
import org.akhikhl.gretty.AppAfterIntegrationTestTask
import org.akhikhl.gretty.AppBeforeIntegrationTestTask

draftWar {
    from "war"
}

task myBeforeIntegration(type: AppBeforeIntegrationTestTask) {
    dependsOn draftWar
    resourceBase = draftWar.archivePath.toString()
    integrationTestTask 'superDev'
}

task myAfterIntegration(type: AppAfterIntegrationTestTask) {
    integrationTestTask 'superDev'
}

task superDev(type: GwtSuperDev) {
    doFirst {
        gwt.modules = gwt.devModules
    }
}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
            }
        copy {
            from "war"
            into "build/dist"
        }
    }
}

task addSource << {
    sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]


eclipse.project {
    name = appName + "-html"
}
